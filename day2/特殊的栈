/**
 * @author zqnh
 * @date 2019/9/4 on 21:56.
 * 设计一个特殊的栈，在实现栈的基本功能下，在实现返回栈中最小元素的操作。
 */
public class MyStack1 {
    private Stack<Integer> stackData;
    private Stack<Integer> stackMin;

    public MyStack1() {
        this.stackData = new Stack<Integer>();
        this.stackMin = new Stack<Integer>();
    }

    public void push(int newNum) {
        if (this.stackMin.isEmpty()){
            this.stackMin.push(newNum);
        } else if(newNum <= this.getmin()){
            this.stackMin.push(newNum);
        }
        this.stackData.push(newNum);
    }
    public int pop(){
        if (this.stackData.isEmpty()){
            throw new RuntimeException("Your Stack is empty");
        }
        int value = this.stackData.pop();
        if (value == this.getmin()){
            this.stackMin.pop();
        }
        return value;
    }

    public int getmin(){
        if(this.stackMin.isEmpty()){
            throw new RuntimeException("Your Stack is empty");
        }
        return this.stackMin.peek();
    }
}
